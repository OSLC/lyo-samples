# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: CI

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
  schedule:
    - cron: "30 4 * * 5" # catch SNAPSHOT breaking changes
  workflow_dispatch:

jobs:
  build-jdk11:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Build Lyo Client samples
        run: |
          mvn -B clean verify --file lyo-client-samples/pom.xml
      - name: E2E client samples tests on ELM @ Jazz.net
        run: ./bin/test-jazz_net.sh
        env:
          JAZZ_NET_USERNAME: ${{ secrets.JAZZ_NET_USERNAME }}
          JAZZ_NET_PASSWORD: ${{ secrets.JAZZ_NET_PASSWORD }}
      - name: E2E client samples tests on ELM @ IBM Nordic
        run: ./bin/test-jazz_nordic.sh
        env:
          JAZZ_NORDIC_USERNAME: ${{ secrets.JAZZ_NORDIC_USERNAME }}
          JAZZ_NORDIC_PASSWORD: ${{ secrets.JAZZ_NORDIC_PASSWORD }}
      - name: E2E client samples tests on ELM @ KTH
        run: ./bin/test-jazz_kth.sh
        env:
          JAZZ_ITM_USERNAME: ${{ secrets.JAZZ_ITM_USERNAME }}
          JAZZ_ITM_PASSWORD: ${{ secrets.JAZZ_ITM_PASSWORD }}

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Build OAuth Discovery application
        run: |
          mvn -B clean verify --file client-oauth-discovery-dui/pom.xml
      - name: Build OAuth Two-legged samples
        run: |
          mvn -B clean verify --file oauth-twolegged-sample/oauth.sample/pom.xml
          mvn -B clean verify --file oauth-twolegged-sample/oauth-cli-helper/pom.xml
